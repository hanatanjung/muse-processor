const path = require('path');const webpack = require('webpack');const {CleanWebpackPlugin} = require('clean-webpack-plugin');const MiniCssExtractPlugin = require('mini-css-extract-plugin');const AssetsPlugin = require('assets-webpack-plugin');const isProduction = () => process.env.NODE_ENV.trim() === 'production';module.exports = {    mode: process.env.NODE_ENV.trim(),    entry: {        ppt: './src/ppt.js',        gdrive: './src/js/gdrive/index.js'    },    output: {        path: path.resolve(__dirname, 'public/dist'),        publicPath: "/dist/",        filename: isProduction() ? "[name]-[hash].js" : "[name].js",    },    plugins: [        new webpack.DefinePlugin({            'process.env': JSON.stringify({                mode: process.env.NODE_ENV.trim()            })        }),        new CleanWebpackPlugin(),        new AssetsPlugin({            filename: 'manifest.json',            path: path.resolve(__dirname, 'public'),            prettyPrint: !isProduction(),        }),        new MiniCssExtractPlugin({            filename: isProduction() ? '[name]-[hash].css' : '[name].css',        }),    ],    module: {        rules: [            {                test: /\.js$/,                exclude: /node_modules\/(?!(dom7|ssr-window|swiper)\/).*/, // class dom7 should not be transpiled (bug from swiper)                use: {                    loader: "babel-loader"                }            },            {                test: /\.s?css$/,                use: [                    { loader: MiniCssExtractPlugin.loader },                    "css-loader",                    { loader: "sass-loader" }                ]            },            {                test: /\.modernizrrc\.js$/,                loader: "webpack-modernizr-loader"            }        ]    },};